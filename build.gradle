plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = projectArtifactGroup
version = projectArtifactId
sourceCompatibility = projectJavaMinVersion

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://git.tswf.io/api/packages/public-repos/maven'}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'org.apache.groovy', name: 'groovy', version: '4.0.9'
    implementation 'io.tswf.groovy.better-groovy:better-groovy-core:1.+'
    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    implementation 'org.springdoc:springdoc-openapi-groovy:1.6.15'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Apply to all groovy source sets
tasks.withType(GroovyCompile).forEach {task ->
    task.doFirst {
        // Append compile classpath to groovy classpath to access compile classpath dependencies in compiler configuration script
        it.groovyClasspath += it.classpath

        // Transfers all groovyc options to compiler configuration script as system properties that can be accessed via System.getProperty("name") from the script file
        for (def property : project.properties) {
            if (property.key.startsWith("groovycOption")) {
                task.groovyOptions.forkOptions.jvmArgs += "-D${property.key}=${property.value}" as String
            }
        }
    }

    task.groovyOptions.javaAnnotationProcessing = true
    task.options.encoding = "UTF-8"
    compileGroovy.groovyOptions.configurationScript = file('gradle/config/groovyc-static.groovy')
}